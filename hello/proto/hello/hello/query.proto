syntax = "proto3";

package hello.hello;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "hello/hello/params.proto";
import "hello/hello/post.proto";

option go_package = "hello/x/hello/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hello/hello/params";
  
  }
  
  // Queries a list of SayHello items.
  rpc SayHello (QuerySayHelloRequest) returns (QuerySayHelloResponse) {
    option (google.api.http).get = "/hello/hello/say_hello/{name}";
  
  }
  
  // Queries a list of Post items.
  rpc Post    (QueryGetPostRequest) returns (QueryGetPostResponse) {
    option (google.api.http).get = "/hello/hello/post/{id}";
  
  }
  rpc PostAll (QueryAllPostRequest) returns (QueryAllPostResponse) {
    option (google.api.http).get = "/hello/hello/post";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QuerySayHelloRequest {
  string name = 1;
}

message QuerySayHelloResponse {
  string name = 1;
}

message QueryGetPostRequest {
  uint64 id = 1;
}

message QueryGetPostResponse {
  Post Post = 1 [(gogoproto.nullable) = false];
}

message QueryAllPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
  repeated Post                                   Post       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

